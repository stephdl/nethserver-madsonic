#!/usr/bin/bash
#I need to do a hack to retrieve the dlna port
#because I don't want to activate the upnp service in shorewall
#the dlna port change randomly at each boot, it is not simple for me :)

#test if madsonic has opened the ports
while :
do
    Test=$(netstat -tlpn | grep $(cat /var/run/madsonic.pid))
    if [ "$Test" ];then
        break
    fi
    if [ "$count" == 12 ]; then
       echo "we cannot wait more for madsonic"
       exit 1
    fi
    sleep 5
    let "count++"
done

#other method, could be interesting also
#TCPPortDlna=$(echo $(netstat -tlpn |
#grep $(netstat -tlpn | grep 4040 |
#cut -c 80-84 | awk '{$1=$1};1') |
#cut -d "." -f 4 | cut -d ":" -f 2))

TCPPortDlna=$(echo $(netstat -tlpn | grep $(cat /var/run/madsonic.pid) |
    grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b:[0-9]+" |
    sed 's/[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}://g') |
    sed 's/ /,/g')

UDPPortDlna=$(echo $(netstat -ulpn | grep $(cat /var/run/madsonic.pid) |
    grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b:[0-9]+" |
    sed 's/[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}.[0-9]\{1,3\}://g') |
    sed 's/ /,/g')

#make a regex to test if the port is right
re='^[0-9]+$'

#Split the array to find each port and test it
IFS=', ' read -r -a array <<< "$TCPPortDlna"
for element in "${array[@]}"
do
    if ! [[ $element =~ $re ]] || [[ $element -gt 65536 ]]; then
        echo "Madsonic DLNA error: $element Not a TCP Port"
        exit 1
    fi
done

#Split the array to find each port and test it
IFS=', ' read -r -a array <<< "$UDPPortDlna"
for element in "${array[@]}"
do
    if ! [[ $element =~ $re ]] || [[ $element -gt 65536 ]]; then
        echo "Madsonic DLNA error: $element Not a UDP Port"
        exit 1
    fi
done

TCPMADSONIC=$(/sbin/e-smith/db configuration getprop madsonic TCPPort)
TCPMADSONIC=${TCPMADSONIC:-4040}

/sbin/e-smith/db configuration set madsonic-dlna service TCPPorts $TCPMADSONIC,$TCPPortDlna UDPPorts 1900,$UDPPortDlna access green status enabled
/sbin/e-smith/signal-event firewall-adjust
